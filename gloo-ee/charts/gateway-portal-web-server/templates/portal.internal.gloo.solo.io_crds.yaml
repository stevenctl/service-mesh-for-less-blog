# Code generated by skv2. DO NOT EDIT.


apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: e6642ff23c94ceb9
    crd.solo.io/version: 1.18.0
  labels:
    app: gloo-portal-apis
    app.kubernetes.io/name: gloo-portal-apis
  name: portalconfigs.portal.internal.gloo.solo.io
spec:
  group: portal.internal.gloo.solo.io
  names:
    kind: PortalConfig
    listKind: PortalConfigList
    plural: portalconfigs
    singular: portalconfig
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              PortalConfig is a internal representation of the user facing Portal resource.
              It is used to provide configuration information for a single Portal backend.
              The PortalConfig contains a list of all API resources that are exposed by the Portal.
            properties:
              apis:
                description: The list of API resources that are exposed by the Portal.
                items:
                  description: |-
                    An API that is exposed by the Portal. API metadata is sourced from the
                    referenced RouteTable and api_schema is a reference to the stitched API schema for the RouteTable.
                    Also references a list of usage plan names that are associated with the API.
                  properties:
                    apiId:
                      description: The ID for this API.
                      type: string
                    apiProductCustomMetadata:
                      additionalProperties:
                        type: string
                      type: object
                    apiProductDisplayName:
                      description: The api product display name
                      type: string
                    apiProductId:
                      description: |-
                        When set, the [/apis](https://docs.solo.io/gloo-gateway/main/portal/openapi/redocly/#tag/APIs/operation/ListAPIs)
                        endpoint in the portal will return `apiProduct` in the response which can be used to group multiple APIs together.
                      type: string
                    apiProductVersionCustomMetadata:
                      additionalProperties:
                        type: string
                      type: object
                    apiSchema:
                      properties:
                        name:
                          description: required name of the object
                          type: string
                        namespace:
                          description: if empty, the object is in the same namespace as
                            the referencing object
                          type: string
                      type: object
                    apiVersion:
                      description: |-
                        The version of the openAPI specification for attached routes. Must be unique within the apiProduct.
                        `apiProduct` is required if `apiVersion` is set.
                      type: string
                    contact:
                      type: string
                    description:
                      type: string
                    license:
                      type: string
                    routeTable:
                      properties:
                        name:
                          description: required name of the object
                          type: string
                        namespace:
                          description: if empty, the object is in the same namespace as
                            the referencing object
                          type: string
                      type: object
                    termsOfService:
                      type: string
                    title:
                      type: string
                  type: object
                type: array
              portalRef:
                description: Reference to the Portal resource that this PortalConfig resource
                  is derived from.
                properties:
                  name:
                    description: required name of the object
                    type: string
                  namespace:
                    description: if empty, the object is in the same namespace as the
                      referencing object
                    type: string
                type: object
              public:
                description: Determines if the content of this PortalConfig requires authentication
                  to view or not.
                type: boolean
            type: object
          status:
            description: The status of the resource after it is applied to your Gloo environment.
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---

