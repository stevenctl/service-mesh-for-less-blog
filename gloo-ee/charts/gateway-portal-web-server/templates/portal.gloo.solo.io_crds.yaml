# Code generated by skv2. DO NOT EDIT.


apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 6582c2ee3c968bfd
    crd.solo.io/version: 1.18.0
  labels:
    app: gloo-portal-apis
    app.kubernetes.io/name: gloo-portal-apis
  name: apidocs.portal.gloo.solo.io
spec:
  group: portal.gloo.solo.io
  names:
    kind: ApiDoc
    listKind: ApiDocList
    plural: apidocs
    singular: apidoc
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: Specifications for the ApiDoc.
            oneOf:
            - not:
                anyOf:
                - required:
                  - openapi
            - required:
              - openapi
            properties:
              openapi:
                description: The OpenAPI schema specification language. Specify only one
                  schema type.
                properties:
                  inlineString:
                    description: The inline, YAML- or JSON-formatted, OpenAPI v2 or v3
                      schema.
                    type: string
                type: object
              servedBy:
                description: The destinations that serve this API, if any.
                items:
                  description: The destinations that serve this API, if any.
                  properties:
                    port:
                      description: |-
                        Port specifies the destination port number to use for this resource.
                        Port is required when the referent is a Kubernetes Service. In this
                        case, the port number is the service port number, not the target port.
                        For Uptreams, port will be ignored.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    targetRef:
                      description: |-
                        Specify backing destination resource (Service, Upstream, see the Gloo docs for the full list of supported servedBy destinations).
                        Specify the backing destination for your app, by target reference.
                        This destination matches the destinations that you later route to.
                        Supported destinations are Kubernetes services and Gloo Upstreams.
                        This field is required when you manually create an ApiDoc for a service that
                        serves an OpenAPI schema.
                      properties:
                        group:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          description: Optional, if unspecified, the local namespace of
                            the policy is inferred.
                          nullable: true
                          type: string
                      type: object
                  type: object
                type: array
            type: object
          status:
            description: The status of the ApiDoc after it is applied to your Gloo environment.
            properties:
              common:
                description: The state conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: a5bcebe5a7755457
    crd.solo.io/version: 1.18.0
  labels:
    app: gloo-portal-apis
    app.kubernetes.io/name: gloo-portal-apis
  name: apiproducts.portal.gloo.solo.io
spec:
  group: portal.gloo.solo.io
  names:
    kind: ApiProduct
    listKind: ApiProductList
    plural: apiproducts
    singular: apiproduct
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              ApiProducts attach Portal Metadata to routes exposed by Gloo in order to make them available for inclusion in GP Portals.
              Later, your developer portal displays this information in the end-user facing API documentation.
              PortalMetadata can be attached to Kubernetes Gateway API HTTPRoutes.
            properties:
              customMetadata:
                additionalProperties:
                  type: string
                description: |-
                  Provide key-value pairs of any api product specific custom metadata that you want to show end users in the frontend portal for this API product.
                  In particular, you may want to provide a custom url for a custom image or logo for the API product.
                type: object
              displayName:
                description: 'Optional: Give a name for the API product to display in
                  the frontend portal. If omitted, the `apiProductId` value is used as
                  the display name.'
                type: string
              id:
                description: |-
                  This field is required to enable the Portal feature.
                  Group APIs from multiple target references together as an API product in the portal.
                  For example, you might have separate routes that route to different `v1` and `v2` versions of your `billing` services that have their own OpenAPI specs.
                  By setting the `apiProductId` metadata to the same `billing-api` value in each api product or by specifying each version of the API product in the `apiVersion` field,
                  the `/api-products` endpoint in the portal server returns the same `apiProduct` in the response.
                  Then, these APIs are grouped together and shown as a single `billing` API product with multiple `v1` and `v2` versions in the frontend portal for your end users to discover and use.
                type: string
              versions:
                description: The list of versions of the API product
                items:
                  description: Versions is a list of references to target refs that are
                    part of the same API version
                  properties:
                    apiVersion:
                      description: |-
                        This field is required to enable the Portal feature.
                        The version of the API in context of the api product.
                        You cannot have multiple `apiVersion` values for the same `apiProductId` value, and you must set `apiProductId` to use `apiVersion`.
                        For example, if you have two routes that both set `apiProductId` to `billing-api`, then one route can also set `apiVersion` to `v1` and the other to `v2`.
                        But both routes cannot set the `apiVersion` to `v1`.
                      type: string
                    customMetadata:
                      additionalProperties:
                        type: string
                      description: |-
                        Provide key-value pairs of any version specific custom metadata that you want to show end users in the frontend portal for this API product.
                        In particular, you might provide information about your API lifecycle management policies,
                        such as `phase=supported`, `phase=deprecated`, `compatibility=backwards`, or other product information.
                        Furthermore, the key-value pairs are added to the API Usage & Analytics data for incoming requests to this API product.
                      type: object
                    openapiMetadata:
                      description: Optional but highly recommended. Sets The OpenAPI specification
                        metadata for the API product version.
                      properties:
                        contact:
                          description: '(Optional): The contact information of the openAPI
                            specification for this API. If omitted, the openAPI specification
                            will not have contact information.'
                          type: string
                        description:
                          description: '(Optional): The description of the openAPI specification
                            for this API. If omitted, the openAPI specification will not
                            have a description.'
                          type: string
                        license:
                          description: '(Optional): The license of the openAPI specification
                            for this API. If omitted, the openAPI specification will not
                            have license information.'
                          type: string
                        termsOfService:
                          description: '(Optional): The terms of service of the openAPI
                            specification for this API. If omitted, the openAPI specification
                            will not have terms of service.'
                          type: string
                        title:
                          description: '(Optional): The title of the openAPI specification
                            for this API. If omitted, the openAPI specification will have
                            a generated title.'
                          type: string
                      type: object
                    targetRefs:
                      description: select routes using the Kubernetes Gateway API standard
                        targetRef https://gateway-api.sigs.k8s.io/geps/gep-713/?h=targetref#policy-targetref-api.
                      items:
                        description: |-
                          PolicyTargetReference identifies Gateway API objects to directly apply policy to.
                          This is a copy of the upstream K8s Gateway API `targetRef` API.
                          See the following for more information:
                          * https://gateway-api.sigs.k8s.io/geps/gep-713/
                          * https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io%2fv1alpha2.PolicyTargetReference
                          * https://github.com/kubernetes-sigs/gateway-api/blob/b4f0307cc9269e73187300e72979e7e111ab74ab/apis/v1alpha2/policy_types.go#L34-L56
                        properties:
                          group:
                            type: string
                          kind:
                            type: string
                          name:
                            type: string
                          namespace:
                            description: Optional, if unspecified, the local namespace
                              of the policy is inferred.
                            nullable: true
                            type: string
                        type: object
                      type: array
                  type: object
                type: array
            type: object
          status:
            description: ApiProductStatus communicates the current state of the ApiProduct.
            properties:
              state:
                description: State of the ApiProduct.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 95ef484131cecc7f
    crd.solo.io/version: 1.18.0
  labels:
    app: gloo-portal-apis
    app.kubernetes.io/name: gloo-portal-apis
  name: apischemadiscoveries.portal.gloo.solo.io
spec:
  group: portal.gloo.solo.io
  names:
    kind: ApiSchemaDiscovery
    listKind: ApiSchemaDiscoveryList
    plural: apischemadiscoveries
    singular: apischemadiscovery
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              <b>Example configuration file</b>:
              ```yaml
               apiVersion: apimanagement.gloo.solo.io/v2
               kind: ApiSchemaDiscovery
               metadata: {}
               spec:
                 openapi:
                   fetchEndpoint:
                     url: "https://example.com/tracks-schema.json"
                     retryDelay: 10s
                     pullAttempts: 10
                  servedBy:
                  - targetRef:
                      port: 8080
                      name: app
                      namespace: app
              ```
            oneOf:
            - not:
                anyOf:
                - required:
                  - openapi
            - required:
              - openapi
            properties:
              openapi:
                description: The details for fetching the API schema.
                properties:
                  fetchEndpoint:
                    description: The URL endpoint to fetch the API schema manually. The
                      Gloo agent must be able to reach this endpoint.
                    properties:
                      pullAttempts:
                        description: |-
                          The number of attempts to fetch the schema. If omitted, the default is 3.
                          You can also configure this setting for all resources by configuring the Gloo Platform agent during installation or upgrading with the `--api-discovery-polling-pull-attempts` flag.
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                      retryDelay:
                        description: |-
                          The retry delay when fetching the schema. If omitted, the default is 5s.
                          You can also configure this setting for all resources by configuring the Gloo Platform agent during installation or upgrading with the `--api-discovery-polling-retry-delay` flag.
                        type: string
                      url:
                        description: 'Required: The URL endpoint to fetch the API schema
                          from. Supported API schema paths are JSON or YAML files. For
                          `https`, make sure that the URL is included in the certificate
                          that validates the HTTPS traffic. Formatted as: `<protocol-scheme>://<host-domain>:<port>/<filepath>`'
                        type: string
                      useBackoff:
                        description: |-
                          Whether to use [exponential backoff](https://en.wikipedia.org/wiki/Exponential_backoff) when retrying to fetch the schema. If omitted, the default is true.
                          You can also configure this setting for all resources by configuring the Gloo Platform agent during installation or upgrading with the `--api-discovery-polling-use-backoff` flag.
                        type: boolean
                    type: object
                type: object
              servedBy:
                description: The destinations that serve the fetched API schema.
                items:
                  description: The destinations that serve this API, if any.
                  properties:
                    port:
                      description: |-
                        Port specifies the destination port number to use for this resource.
                        Port is required when the referent is a Kubernetes Service. In this
                        case, the port number is the service port number, not the target port.
                        For Uptreams, port will be ignored.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    targetRef:
                      description: |-
                        Specify backing destination resource (Service, Upstream, see the Gloo docs for the full list of supported servedBy destinations).
                        Specify the backing destination for your app, by target reference.
                        This destination matches the destinations that you later route to.
                        Supported destinations are Kubernetes services and Gloo Upstreams.
                        This field is required when you manually create an ApiDoc for a service that
                        serves an OpenAPI schema.
                      properties:
                        group:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          description: Optional, if unspecified, the local namespace of
                            the policy is inferred.
                          nullable: true
                          type: string
                      type: object
                  type: object
                type: array
            type: object
          status:
            description: |-
              ApiSchemaDiscoveryStatus shows the status of the ApiSchemaDiscovery.
              If the Gloo agent was not able to fetch the API schema, the status is reflected in `common`.
            properties:
              common:
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: ddde457640c3a55f
    crd.solo.io/version: 1.18.0
  labels:
    app: gloo-portal-apis
    app.kubernetes.io/name: gloo-portal-apis
  name: portals.portal.gloo.solo.io
spec:
  group: portal.gloo.solo.io
  names:
    kind: Portal
    listKind: PortalList
    plural: portals
    singular: portal
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              The Portal resource configures a developer portal that you can use to securely expose your APIs to end users.
              Before you create the Portal, you bundle the APIs that you want to expose into an APIProduct
    
              The following example shows a Portal resource.
    
              ```yaml
              apiVersion: apimanagement.gloo.solo.io/v2
              kind: Portal
                 metadata:
                   name: public-portal
                   namespace: gloo-mesh-addons
              spec:
                 portalBackends:
                   - name: gloo-mesh-portal-server
                 apiProducts:
                   - name: productpage
                     namespace: bookinfo
              ```
            properties:
              apiProducts:
                description: The list of ApiProducts you want the developer portal to
                  expose.
                items:
                  description: |-
                    Reference to an object which is optionally in another namespace
                    than the referencing object. The type of the object
                    should already be known by the context in which the reference is used.
                  properties:
                    name:
                      description: required name of the object
                      type: string
                    namespace:
                      description: if empty, the object is in the same namespace as the
                        referencing object
                      type: string
                  type: object
                type: array
              visibility:
                description: |-
                  Settings for controlling the visibility of the Portal's contents.
                  Default visibility for content in the Portal is private.
                  When a Portal is public, all APIs published in the Portal are public.
                  When a Portal is private, the Portal requires authentication. An external auth policy must be
                  applied to the Portal's route table in order to enable authentication. The external auth policy must use the
                  `idTokenHeader` field with the `id_token` to pass the user's ID token to the Portal.
                  For authentication to work, the `email` claim is required in the `id_token`.
                properties:
                  public:
                    description: |-
                      If true, all the APIs published in this portal are going to be public (i.e. visible to unauthenticated users);
                      individual APIs can still be made private using the privateAPILabels field.
                      Defaults to false, in which case the privateAPILabels field will have not effect.
                    type: boolean
                type: object
            type: object
          status:
            properties:
              common:
                description: The state conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---

