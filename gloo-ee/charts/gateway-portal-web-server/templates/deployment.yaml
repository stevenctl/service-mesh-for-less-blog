# Code generated by skv2. DO NOT EDIT.



{{- $gatewayPortalWebServer := $.Values.glooPortalServer }}
---

{{- define "gateway-portal-web-server.deploymentSpec" }}
# Deployment manifest for gateway-portal-web-server

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gateway-portal-web-server
    gloo-mesh: gloo-mesh-portal
  annotations:
    app.kubernetes.io/name: gateway-portal-web-server
  name: gateway-portal-web-server
  namespace: {{ $.Values.common.addonNamespace | default $.Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: gateway-portal-web-server
      gloo-mesh: gloo-mesh-portal
  template:
    metadata:
      labels:
        app: gateway-portal-web-server
        gloo-mesh: gloo-mesh-portal
      annotations:
        app.kubernetes.io/name: gateway-portal-web-server
    spec:
      serviceAccountName: gateway-portal-web-server
      {{- /* Override the default podSecurityContext config if it is set. */}}
{{- if not .Values.global.securitySettings.floatingUserId }}
{{- if or ($.Values.glooPortalServer.podSecurityContext) (eq "map[]" (printf "%v" $.Values.glooPortalServer.podSecurityContext)) }}
      securityContext:
{{ toYaml $.Values.glooPortalServer.podSecurityContext | indent 8 }}
{{- end }} 
{{- end }}
      volumes:
{{- if $.Values.glooPortalServer.database }}
      - name: database
        secret:
          optional: true
          secretName: portal-database-config
{{- end }}
      containers:
{{- $gatewayPortalWebServer := $.Values.glooPortalServer }}
{{- $gatewayPortalWebServerImage := $gatewayPortalWebServer.image }}
      - name: gateway-portal-web-server
        image: {{ $gatewayPortalWebServerImage.registry }}/{{ $gatewayPortalWebServerImage.repository }}:{{ $gatewayPortalWebServerImage.tag }}
        imagePullPolicy: {{ $gatewayPortalWebServerImage.pullPolicy }}
        args:
        - --dev-logger={{ $.Values.glooPortalServer.devMode | default  $.Values.common.devMode }}
        - --verbose={{ $.Values.glooPortalServer.verbose | default  $.Values.common.verbose }}
        - --http-port={{ $.Values.glooPortalServer.ports.http }}
        - --database={{ $.Values.glooPortalServer.database.type | default "in-memory" }}
{{- if $gatewayPortalWebServer.env }}
        env:
{{ toYaml $gatewayPortalWebServer.env | indent 10 }}
{{- else if $gatewayPortalWebServer.extraEnvs }}
        env:
{{- end }}
{{- range $name, $item := $gatewayPortalWebServer.extraEnvs }}
          - name: {{ $name }}
{{- $item | toYaml | nindent 12 }}
{{- end }}
        volumeMounts:
{{- if $.Values.glooPortalServer.database }}
        - mountPath: /etc/database
          name: database
          readOnly: true
{{- end }}
        resources:
{{- if $gatewayPortalWebServer.resources }}
{{ toYaml $gatewayPortalWebServer.resources | indent 10}}
{{- else}}
          requests:
            cpu: 500m
            memory: 256Mi
{{- end }}
        {{- /*
          Render securityContext configs if it is set.
          If securityContext is not set, render the default securityContext.
          If securityContext is set to 'false', render an empty map.
        */}}
        securityContext:
{{- if or ($gatewayPortalWebServer.securityContext) (eq "map[]" (printf "%v" $gatewayPortalWebServer.securityContext)) }}
{{ toYaml $gatewayPortalWebServer.securityContext | indent 10}}
{{/* Because securityContext is nil by default we can only perform following conversion if it is a boolean. Skip conditional otherwise. */}}
{{- else if eq (ternary $gatewayPortalWebServer.securityContext true (eq "bool" (printf "%T" $gatewayPortalWebServer.securityContext))) false }}
          {}
{{- else}}
          runAsNonRoot: true
          {{- if not (or $gatewayPortalWebServer.floatingUserId .Values.global.securitySettings.floatingUserId) }}
          runAsUser: {{ printf "%.0f" (float64 $gatewayPortalWebServer.runAsUser) }}
          {{- end }}
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
{{- end }}
      {{- if $gatewayPortalWebServerImage.pullSecret }}
      imagePullSecrets:
        - name: {{ $gatewayPortalWebServerImage.pullSecret }}
      {{- end}}
{{- end }} {{/* define "gateway-portal-web-server.deploymentSpec" */}}

{{/* Render gateway-portal-web-server deployment template with overrides from values*/}}
{{ if $gatewayPortalWebServer.enabled }}
{{- $gatewayPortalWebServerDeploymentOverrides := dict }}
{{- if $gatewayPortalWebServer.deploymentOverrides }}
{{- $gatewayPortalWebServerDeploymentOverrides = $gatewayPortalWebServer.deploymentOverrides  }}
{{- end }}
---
{{ include "skv2.utils.merge" (list . $gatewayPortalWebServerDeploymentOverrides "gateway-portal-web-server.deploymentSpec") }}
{{- end }}
---
{{ if $gatewayPortalWebServer.enabled }}
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: gateway-portal-web-server
  {{- if $gatewayPortalWebServer.serviceAccount}}
  {{- if $gatewayPortalWebServer.serviceAccount.extraAnnotations }}
  annotations:
    {{- range $key, $value := $gatewayPortalWebServer.serviceAccount.extraAnnotations }}
    {{ $key }}: {{ $value }}
    {{- end }}
  {{- end }}
  {{- end}}
  name: gateway-portal-web-server
  namespace: {{ $.Values.common.addonNamespace | default $.Release.Namespace }}
{{- end }}


{{- define "gateway-portal-web-server.serviceSpec"}}

# Service for gateway-portal-web-server
{{/* Define variables in function scope */}}
{{- $gatewayPortalWebServer := $.Values.glooPortalServer}}
apiVersion: v1
kind: Service
metadata:
  labels:
    app: gateway-portal-web-server
  annotations:
    app.kubernetes.io/name: gateway-portal-web-server
  name: gateway-portal-web-server
  namespace: {{ $.Values.common.addonNamespace | default $.Release.Namespace }}
spec:
  selector:
    app: gateway-portal-web-server
  type: {{ $gatewayPortalWebServer.serviceType }}
  ports:
  - name: http
    port: {{ index $gatewayPortalWebServer "ports" "http" }}

{{- end }} {{/* define "gateway-portal-web-server.serviceSpec" */}}
{{ if $gatewayPortalWebServer.enabled }}
{{/* Render gateway-portal-web-server service template with overrides from values*/}}
{{- $gatewayPortalWebServerServiceOverrides := dict }}
{{- if $gatewayPortalWebServer.serviceOverrides }}
{{- $gatewayPortalWebServerServiceOverrides = $gatewayPortalWebServer.serviceOverrides  }}
{{- end }}

---

{{ include "skv2.utils.merge" (list . $gatewayPortalWebServerServiceOverrides "gateway-portal-web-server.serviceSpec") }}
{{- end }}

