{{- if .Values.gateway.rolloutJob.enabled }}
{{- $image := .Values.gateway.rolloutJob.image }}
{{- if .Values.global }}
{{- $image = merge .Values.gateway.rolloutJob.image .Values.global.image }}
{{- end }}
apiVersion: batch/v1
kind: Job
metadata:
  labels:
{{ include "gloo.labels" . | indent 4}}
    gloo: resource-rollout
  name: gloo-resource-rollout-check
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "5"
    {{- include "gloo.jobHelmDeletePolicySucceededAndBeforeCreation" .Values.gateway.rolloutJob | nindent 4 }}
spec:
  {{- include "gloo.jobSpecStandardFields" .Values.gateway.rolloutJob | nindent 2 -}}
  template:
    metadata:
      labels:
        gloo: resource-rollout
        sidecar.istio.io/inject: "false"
        {{- if .Values.gateway.rolloutJob.extraPodLabels }}
        {{- range $key, $value := .Values.gateway.rolloutJob.extraPodLabels }}
        {{ $key | quote }}: {{ $value | quote }}
        {{- end }}
        {{- end }}
      {{- if or .Values.settings.linkerd .Values.gateway.rolloutJob.extraPodAnnotations }}
      annotations:
        {{- if .Values.settings.linkerd }}
        "linkerd.io/inject": disabled
        {{- end }}
        {{- range $key, $value := .Values.gateway.rolloutJob.extraPodAnnotations }}
        {{ $key | quote }}: {{ $value | quote }}
        {{- end }}
      {{- end }}
    spec:
      {{- include "gloo.pullSecret" $image | nindent 6 -}}
      serviceAccountName: gloo-resource-rollout
      {{- include "gloo.podSpecStandardFields" .Values.gateway.rolloutJob | nindent 6 -}}
      volumes:
        - name: custom-resource-config-volume
          configMap:
            name: gloo-custom-resource-config
            items:
              - key: custom-resources
                path: custom-resources
            {{- if .Values.global.extraCustomResources }}
              - key: extra-custom-resources
                path: extra-custom-resources
            {{- end }}
      containers:
        - name: kubectl
          image: {{template "gloo.image" $image}}
          imagePullPolicy: {{ $image.pullPolicy }}
          env:
            - name: HAS_CUSTOM_RESOURCES
              valueFrom:
                configMapKeyRef:
                  name: gloo-custom-resource-config
                  key: has-custom-resources
          {{- if .Values.global.extraCustomResources }}
            - name: HAS_EXTRA_CUSTOM_RESOURCES
              valueFrom:
                configMapKeyRef:
                  name: gloo-custom-resource-config
                  key: has-extra-custom-resources
          {{- end }}
          volumeMounts:
            - name: custom-resource-config-volume
              mountPath: /etc/gloo-custom-resources
          {{- $securityDefaults := dict "runAsNonRoot" true }}
          {{- if not .Values.gateway.rolloutJob.floatingUserId -}}
            {{- $_ := set $securityDefaults "runAsUser" .Values.gateway.rolloutJob.runAsUser }}
          {{- end -}}
          {{- include "gloo.containerSecurityContext" (dict "values" .Values.gateway.rolloutJob.containerSecurityContext "defaults" $securityDefaults "podSecurityStandards" .Values.global.podSecurityStandards "indent" 10 "globalSec" .Values.global.securitySettings) }}
          {{- with .Values.gateway.rolloutJob.resources }}
          resources: {{ toYaml . | nindent 12}}
          {{- end }}
          command:
          - /bin/sh
          - -c
          - |
            # Check if Gloo Edge applied custom resources
            if [ "$HAS_CUSTOM_RESOURCES" == "true" ]
            then
              # Wait for the resource rollout job to complete
              kubectl -n {{ .Release.Namespace }} get job gloo-resource-rollout &> /dev/null
              if [ $? -eq 0 ]
              then
                # Exit immediately if the rollout job failed
                kubectl -n {{ .Release.Namespace }} get job gloo-resource-rollout -o jsonpath='{.status.conditions[?(@.type=="Failed")].status}' | grep -i "True" &> /dev/null
                if [ $? -eq 0 ]
                then
                    echo "Rollout job failed. Not all resources were successfully created."
                    exit 1
                fi
                echo "Waiting for the resource rollout job to complete"
                kubectl -n {{ .Release.Namespace }} wait --for=condition=complete job gloo-resource-rollout --timeout={{ .Values.gateway.rolloutJob.timeout }}s || exit 1

              fi

              # If the resource has been applied, re-applying it should output something like this
              # gateway.gateway.solo.io/default unchanged
              # If not it will output
              # gateway.gateway.solo.io/default configured
              # gateway.gateway.solo.io/default created
              # This indicates that the resource was not applied in the resource rollout job
              if [ "$HAS_EXTRA_CUSTOM_RESOURCES" == "true" ]
              then
                FAILED_RESOURCES=$(kubectl apply -f /etc/gloo-custom-resources/extra-custom-resources | grep -iv ' unchanged')
                if [ ! -z "$FAILED_RESOURCES" ]
                then
                  echo "The following extra resources failed to be applied by the resource rollout job $FAILED_RESOURCES. As a consequence, other custom resources (eg. Gateways) were not applied."
                  exit 1
                else
                  echo "The resource rollout job successfully applied all the extra resources"
                fi
              fi

              FAILED_RESOURCES=$(kubectl apply -f /etc/gloo-custom-resources/custom-resources | grep -iv ' unchanged')
              if [ ! -z "$FAILED_RESOURCES" ]
              then
                echo "The following resources failed to be applied by the resource rollout job $FAILED_RESOURCES"
                exit 1
              else
                echo "The resource rollout job successfully applied all the resources"
              fi
            else
              echo "no custom resources to check"
            fi
{{- end }}{{/* if .Values.gateway.rolloutJob.enabled  */}}

